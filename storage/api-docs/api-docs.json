{
    "openapi": "3.0.0",
    "info": {
        "title": "Learnado API",
        "description": "This is a simple API for an e-learning application",
        "contact": {
            "name": "Support Team",
            "email": "support@learnado.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/create-user": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new user account",
                "operationId": "749e9becf9b90a1abf0fbc46535936bd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "role"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "JohnDoe@example.com"
                                    },
                                    "role": {
                                        "description": "User role",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "profile_picture": {
                                        "description": "Profile picture of the user",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect input or missing fields"
                    },
                    "401": {
                        "description": "Unauthorized - User not authorized to perform this action"
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to create user account"
                    }
                }
            }
        },
        "/api/admin/delete-user-account/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a user account",
                "operationId": "b1447c135dcd0313aeb51fb9a62b9e92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user account to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect input or missing user ID"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized - User not authorized to perform this action"
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to delete user account"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/accepted-users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List accepted users with optional pagination and filters",
                "operationId": "getAcceptedUsers",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Search keyword for user details",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PER_PAGE",
                        "in": "query",
                        "description": "Number of users to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "ORDER_BY",
                        "in": "query",
                        "description": "Column to order the results by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "DIRECTION",
                        "in": "query",
                        "description": "Direction to order users",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "PAGINATION",
                        "in": "query",
                        "description": "Boolean to specify if pagination is enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "JohnDoe@example.com"
                                                    },
                                                    "role": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "profile_picture": {
                                                        "type": "string",
                                                        "example": "url_to_picture"
                                                    },
                                                    "is_valid": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2021-01-01T00:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2021-01-01T00:00:00.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/pending-users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List pending user accounts with optional pagination and filters",
                "operationId": "getPendingUsers",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Search keyword for user details",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PER_PAGE",
                        "in": "query",
                        "description": "Number of users to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "ORDER_BY",
                        "in": "query",
                        "description": "Column to order the results by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "DIRECTION",
                        "in": "query",
                        "description": "Direction to order users",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "PAGE",
                        "in": "query",
                        "description": "Page number to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "PAGINATION",
                        "in": "query",
                        "description": "Boolean to specify if pagination is enabled",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of pending users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pending users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "JohnDoe@example.com"
                                                    },
                                                    "role": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "profile_picture": {
                                                        "type": "string",
                                                        "example": "url_to_picture"
                                                    },
                                                    "is_valid": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2021-01-01 00:00:00"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2021-01-01 00:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get a list of users",
                "operationId": "f1e0fc2e414a2125b07788640ae8a172",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Filter users by keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter users by role; multiple roles can be specified as comma-separated values (e.g., 1,2)",
                        "required": false
                    },
                    {
                        "name": "PER_PAGE",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "ORDER_BY",
                        "in": "query",
                        "description": "Attribute to order users by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "created_at"
                        }
                    },
                    {
                        "name": "DIRECTION",
                        "in": "query",
                        "description": "Direction of sorting, asc or desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "PAGINATION",
                        "in": "query",
                        "description": "Enable pagination (true or false)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "JohnDoe@example.com"
                                                    },
                                                    "role": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "profile_picture": {
                                                        "type": "string",
                                                        "example": "url_to_picture"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/suspend-account/{id}": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Suspend a user account",
                "operationId": "6e12921e8cdffcfbba5549e25703a3dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user account to suspend",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User account suspended successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account suspended successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID supplied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - User account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while suspending the account."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/update-user-account/{id}": {
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update a user account",
                "operationId": "b153486cf20488c44af7d8a43f33cd4e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user account to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Optional data for updating a user account. At least one field must be provided, excluding email.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "profile_picture": {
                                        "description": "Profile picture of the user",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "role": {
                                        "description": "User role",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account updated successfully"
                                        },
                                        "user": {
                                            "description": "The updated user object.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "profile_picture": {
                                                    "type": "string",
                                                    "example": "url_to_picture"
                                                },
                                                "role": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect input or validation failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error messages"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authorized to perform this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to update user account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An internal server error has occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/validate-user-account/{id}": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Validate a user account",
                "operationId": "8fe4c60fc1cb3cef79a716157b54cc2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user account to validate",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User account validated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account validated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid ID supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID supplied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - User account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User account not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Unable to validate user account due to server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An internal server error has occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "operationId": "166ed9fbecb400fd6c0d84b0c9f00cce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "testuser@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login Successful"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "fb35f0f43db6f30d8948e507f45bdb2f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Ameny"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Elokb"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "ameny.elokb@example.com"
                                    },
                                    "password": {
                                        "description": "Minimum length based on configuration, must match password confirmation, and adhere to defined regex",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    },
                                    "profile_picture": {
                                        "description": "Profile picture file, adheres to defined MIME types and max file size",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "role": {
                                        "description": "User role, must be one of the predefined enum values",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/send-password-reset-mail": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send a password reset email",
                "operationId": "0c7d7fc01ec85afe44c15b599c7e559d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address to which the password reset link will be sent.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset email sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to process request due to invalid input."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password-set": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Set a user password",
                "operationId": "9f6f9a69576483fbd783a7b1a9051d52",
                "requestBody": {
                    "description": "Payload to set a new password for a user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "token"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "testuser@example.com"
                                    },
                                    "password": {
                                        "description": "Password must be at least 8 characters long and contain a mix of letters, numbers, and symbols.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678Aa"
                                    },
                                    "password_confirmation": {
                                        "description": "password must much",
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678Aa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password set successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request format or parameters"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token"
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to set password"
                    }
                }
            }
        },
        "/api/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get a new access token",
                "operationId": "3ca470a54b6819771ee721d60c54cbb7",
                "requestBody": {
                    "description": "Refresh token required to obtain a new access token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "type": "string",
                                        "example": "YourRefreshTokenHere"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "NewAccessTokenHere"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid or expired refresh token"
                    },
                    "500": {
                        "description": "Internal server error, e.g., failed to generate an access token"
                    }
                },
                "security": []
            }
        },
        "/api/admin/categories/create": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new category",
                "operationId": "c4f791cdf7e9831f40f314a8f5e2124a",
                "requestBody": {
                    "description": "Data needed to create a new category",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category"
                                ],
                                "properties": {
                                    "category": {
                                        "description": "The name of the category to be created. Must be unique and cannot exceed the maximum string length defined in the configuration.",
                                        "type": "string",
                                        "example": "Books"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully."
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Books"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-14T12:34:56.789Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect input or missing fields"
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to create category"
                    }
                }
            }
        },
        "/api/admin//delete-category/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a category",
                "operationId": "068485f38cfb3a107961e4db06d1634b",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The unique identifier of the category to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect input or missing category ID"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to delete category"
                    }
                }
            }
        },
        "/api/admin/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "List categories with optional filtering and pagination",
                "operationId": "fa3bfd24a26b9dabb38420e41f62fb36",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to return per page for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Field to order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Direction of sort, either asc or desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories found."
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_items": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/designer/create-course": {
            "post": {
                "tags": [
                    "Designer"
                ],
                "summary": "Create a new course",
                "operationId": "f6976ff0dc92e6753ab2f72ec4517e21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "category_id",
                                    "description",
                                    "language_id",
                                    "is_paid",
                                    "is_public"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    },
                                    "category_id": {
                                        "description": "Category ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This course is an introduction to Laravel"
                                    },
                                    "prerequisites": {
                                        "type": "string",
                                        "example": "Basic knowledge of PHP"
                                    },
                                    "course_for": {
                                        "type": "string",
                                        "example": "Beginners"
                                    },
                                    "language_id": {
                                        "description": "Language ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "2 weeks"
                                    },
                                    "is_paid": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 100
                                    },
                                    "discount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 10
                                    },
                                    "facilitator_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "selected_user_ids": {
                                        "description": "User IDs for whom the course is specifically created",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "course_media": {
                                        "description": "Media files for the course",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "teaching_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://example.com/course"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T00:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-15T00:00:00Z"
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "example": "40.712776"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "example": "-74.006058"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/designer/delete-course/{id}": {
            "delete": {
                "tags": [
                    "Designer"
                ],
                "summary": "Delete a course",
                "operationId": "f708ff9b15c205a1f0a772af8dc06262",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "The ID of the course to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Incorrect course ID or other request error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Error deleting course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/course/{id}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get course details by ID",
                "operationId": "4f3f813753c62da9b9c1b01be20fec6f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the course to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course found"
                                        },
                                        "course": {
                                            "description": "The course object including details and associated media",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Laravel"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A comprehensive course on Laravel framework"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "media": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "http://example.com/media/image1.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "List all courses with optional filtering and pagination",
                "operationId": "b99b1b970571e4f792737ea90b77bfd4",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter courses by title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter courses by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Filter courses by language ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_paid",
                        "in": "query",
                        "description": "Filter courses by paid status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Filter courses by price",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "discount",
                        "in": "query",
                        "description": "Filter courses by discount",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "teaching_type",
                        "in": "query",
                        "description": "Filter courses by teaching type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of courses to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Field to order the courses by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Direction to order courses (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courses listed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Courses found"
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_items": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designer/update-course/{id}": {
            "patch": {
                "tags": [
                    "Designer"
                ],
                "summary": "Update a course",
                "operationId": "577041cc7cae8263e8f4a29544992dde",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "The ID of the course to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "category",
                                    "language"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the course",
                                        "type": "string",
                                        "example": "Advanced Laravel"
                                    },
                                    "description": {
                                        "description": "Description of the course",
                                        "type": "string",
                                        "example": "This course covers advanced topics of Laravel."
                                    },
                                    "category": {
                                        "description": "ID of the course category",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "language": {
                                        "description": "ID of the language",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_paid": {
                                        "description": "Indicates if the course is paid",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "description": "Price of the course (required if is_paid is true)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "discount": {
                                        "description": "Discount on the course",
                                        "type": "number",
                                        "format": "float",
                                        "example": 20
                                    },
                                    "course_media": {
                                        "description": "Array of course media files",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No course found with the provided ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/create-language": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new language",
                "operationId": "892c7bbacc13349ac3f6fda333e63607",
                "requestBody": {
                    "description": "Data needed to create a new language",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "language"
                                ],
                                "properties": {
                                    "language": {
                                        "description": "The name of the language to be created. Must be unique and adhere to maximum length constraints.",
                                        "type": "string",
                                        "example": "French"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Language created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Language created successfully"
                                        },
                                        "language": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "French"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/delete-language/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a language",
                "operationId": "fb6903d5fc0aa9fbd00174e811e24c98",
                "parameters": [
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "The ID of the language to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Language deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect input or missing language ID"
                    },
                    "404": {
                        "description": "Language not found"
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to delete language"
                    }
                }
            }
        },
        "/api/admin/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "List languages with optional filtering and pagination",
                "operationId": "4ca71737421cde8fc16d1c433adb37d4",
                "parameters": [
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Filter by language name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to return per page for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Field to order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Direction of sort, either asc or desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Languages fetched successfully."
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_items": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/designer/delete-quiz/{step_id}": {
            "delete": {
                "tags": [
                    "Designer"
                ],
                "summary": "Delete a quiz from a specific step",
                "operationId": "7f1396ceabdc2e1edec7eafec043a3e4",
                "parameters": [
                    {
                        "name": "stepId",
                        "in": "path",
                        "description": "The ID of the step from which the quiz will be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Incorrect step ID or other request error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Step or quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step or quiz not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Error deleting quiz",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designer/update-quiz/{step_id}": {
            "patch": {
                "tags": [
                    "Designer"
                ],
                "summary": "Update a quiz for a specific step",
                "operationId": "9a779116877e58f3a7af150c4b3b4de5",
                "parameters": [
                    {
                        "name": "stepId",
                        "in": "path",
                        "description": "The ID of the step associated with the quiz to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Quiz update data including questions and answers",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quiz": {
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "example": "Updated Quiz Title"
                                            },
                                            "questions": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "question": {
                                                            "type": "string",
                                                            "example": "What is Laravel?"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "QCM"
                                                        },
                                                        "is_valid": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "answers": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "answer": {
                                                                        "type": "string",
                                                                        "example": "A PHP Framework"
                                                                    },
                                                                    "is_valid": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "questions_to_remove": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "answers_to_remove": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quiz updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Step or quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step or quiz not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designer/create-step/{course_id}": {
            "post": {
                "tags": [
                    "Designer"
                ],
                "summary": "Create steps for a course",
                "operationId": "1bb8d0062fa870ac28b4293f4e1ac829",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "The ID of the course for which steps are being created",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for creating new steps, including optional quizzes and media",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "steps"
                                ],
                                "properties": {
                                    "steps": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction to Course"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Course overview and objectives"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "media_files": {
                                                    "description": "Array of step-related media files",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    }
                                                },
                                                "media_urls": {
                                                    "description": "Array of URLs for step-related media",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "media_titles": {
                                                    "type": "string",
                                                    "example": "Step Media Title"
                                                },
                                                "quiz": {
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Quiz 1"
                                                        },
                                                        "questions": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "question": {
                                                                        "type": "string",
                                                                        "example": "What is 2+2?"
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "example": "binary"
                                                                    },
                                                                    "is_valid": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "answers": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "properties": {
                                                                                "answer": {
                                                                                    "type": "string",
                                                                                    "example": "4"
                                                                                },
                                                                                "is_valid": {
                                                                                    "type": "boolean",
                                                                                    "example": true
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Steps created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Steps created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designer/delete-step/{step_id}": {
            "delete": {
                "tags": [
                    "Designer"
                ],
                "summary": "Delete a step from a course",
                "operationId": "c50c5c7de22e53f3d8aee7fd5e679699",
                "parameters": [
                    {
                        "name": "stepId",
                        "in": "path",
                        "description": "The ID of the step to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Step deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Incorrect step ID or other request error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Step not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Error deleting step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designer/update-steps/{step_id}": {
            "patch": {
                "tags": [
                    "Designer"
                ],
                "summary": "Update details of a specific step",
                "operationId": "2b894d703d0430e62ec51a20a5e361b4",
                "parameters": [
                    {
                        "name": "step_id",
                        "in": "path",
                        "description": "The ID of the step to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Step update data including optional fields for media management",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Updated title of the step",
                                        "type": "string",
                                        "example": "Step 1: Introduction"
                                    },
                                    "description": {
                                        "description": "Updated description of the step",
                                        "type": "string",
                                        "example": "An introductory step"
                                    },
                                    "duration": {
                                        "description": "Updated duration in minutes",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "media_files": {
                                        "description": "Array of new media files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "media_to_remove": {
                                        "description": "IDs of media to remove from the step",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "media_urls": {
                                        "description": "URLs of new media to be associated with the step",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Step updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step updated successfully"
                                        },
                                        "step": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Step 1: Introduction"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "An introductory step"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "media": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "http://example.com/media/intro.jpg"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Introductory Image"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Step not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user by ID",
                "operationId": "9e87d8176c632e803e12609af86d3b24",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User found"
                                        },
                                        "user": {
                                            "description": "The retrieved user's details",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID supplied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No user found with the provided ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update-profile": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "operationId": "25a0d49b88b333b020406fb334623345",
                "requestBody": {
                    "description": "Data for updating the user profile. All fields are optional but at least one should be provided.",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "User's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "User's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "password": {
                                        "description": "New password for the user account. Must meet the defined complexity requirements.",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "profile_picture": {
                                        "description": "New profile picture for the user.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "400": {
                "description": "Bad request - The request could not be understood by the server due to malformed syntax."
            },
            "401": {
                "description": "Unauthorized - User not authorized to perform this action"
            },
            "500": {
                "description": "Internal Server Error - Failed to retrieve user list"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT Bearer token **_only_**",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}